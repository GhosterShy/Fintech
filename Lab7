import pandas as pd
data= pd.read_csv("insurance_data.csv")


missing_data = data.isnull().sum()

# Жетпейтін мәндерді тексеру
missing_data


#Бос элементтерден тазалау
data = data.dropna()




# Категориялық айнымалыларды сандық форматқа айналдыру
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn.preprocessing import LabelEncoder
from sklearn.metrics import mean_squared_error, r2_score



label_encoder = LabelEncoder()
data['gender'] = label_encoder.fit_transform(data['gender'])
data['diabetic'] = label_encoder.fit_transform(data['diabetic'])
data['smoker'] = label_encoder.fit_transform(data['smoker'])
data['region'] = label_encoder.fit_transform(data['region'])

# Кіріс (тәуелсіз айнымалылар) және шығыс (тәуелді айнымалы) айнымалыларды бөліп алу
X = data[['age', 'gender', 'bmi', 'bloodpressure', 'children', 'diabetic', 'smoker', 'region']]
y = data['claim']  # сақтандыру төлемі

# 2. Деректерді оқыту және тест жинақтарына бөлу
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# 3. Random Forest моделін құру және оқыту
model = RandomForestRegressor(n_estimators=100, random_state=42)
model.fit(X_train, y_train)



#Орташа қателігін есептеу
y_pred = model.predict(X_test)
mse = mean_squared_error(y_test, y_pred)
print(f'Model MSE: {mse}')


import matplotlib.pyplot as plt

# Клиенттің жасы мен сақтандыру төлемі арасындағы байланыс график бойынша
plt.figure(figsize=(16, 6))
plt.bar(data['age'], data['claim'],alpha=0.7)
plt.title('Age vs Insurance Claim')
plt.xlabel('Age')
plt.ylabel('Insurance Claim')
plt.grid(False)
plt.show()


# Клиенттің кіріс деңгейі мен сақтандыру полисі бағасының өзгеруі график бойынша
plt.figure(figsize=(10, 6))
plt.bar(data['gender'], data['claim'])
plt.title('Income vs Policy Price')
plt.xlabel('Income')
plt.ylabel('Policy Price')
plt.grid(True)
plt.show() 


# Темекі шегетін және шекпейтін клиенттің шмен сақтандыру полисі бағасының өзгеруі график бойынша
plt.subplot(1, 2, 2)
plt.bar(data['smoker'], data['claim'], color=['lightgreen', 'lightcoral'])
plt.title('Сақтандыру')
plt.xlabel('Темекі шегетін және шекпейтін адам')
plt.ylabel('Орташа сумма')
plt.xticks(rotation=0)
х
plt.tight_layout()
plt.show()
